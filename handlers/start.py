from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, InputFile, InputMediaPhoto
from keyboards.reply_kb import start_kb, new_user
from aiogram.fsm.context import FSMContext
from filters.fsm_filter import Report, Searchuser, ChangeBalanceUp, ChangeBalanceDown, Update
from utils.database import new_users, get_users, delete_user, change_balance_bal, get_id
from keyboards.inline_kb import up_balance, change_balance
from aiogram.utils.chat_action import ChatActionSender
from create_bot import bot
import asyncio
from create_bot import admins
from utils.image_init import main

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    if message.from_user.id in admins:
        await message.answer(f'{message.from_user.username}, –≤—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ωüë§', reply_markup=start_kb())
    else:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}')
        a = await new_users(message.from_user.id, message.from_user.username, 0)
        if a != '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç':
            await bot.send_message(chat_id=str(admins),
                               text=f'–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—åüëç\n{message.from_user.username}\nid{message.from_user.id}')
        else:
            pass


@router.message(F.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Çüìú')
async def cmd_send_photo(message: Message, state: FSMContext):
    if message.from_user.id in admins:
        await state.set_state(Report.report_id)
        await message.reply('–ù–∞–ø–∏—à–∏—Ç–µ id –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞')


@router.message(Report.report_id)
async def report_id(message: Message, state: FSMContext):
    global idi
    try:
        username = message.text
        if username.startswith('@'):
            chat_id = username[1:]
        else:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ username (@user)!")
            return
        idi = await get_id(chat_id)
        await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")
        await state.set_state(Report.photo1)
    except Exception:
        await message.answer('Mistake')


@router.message(Report.photo1, F.photo)
async def report_photo1(message: Message, state: FSMContext):
    global summm1, file
    photo_1 = message.photo[-1]
    file_id = photo_1.file_id
    await state.update_data(photo1=file_id)
    file = await bot.get_file(file_id)
    file_path = file.file_path
    await bot.download_file(file_path, "utils/downloads/photo1.jpg")
    summm1 = await main("utils/downloads/photo1.jpg")
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ')
    await state.set_state(Report.photo2)


@router.message(Report.photo2, F.photo)
async def report_photo2(message: Message, state: FSMContext):
    photo_2 = message.photo[-1]
    file_id = photo_2.file_id
    await state.update_data(photo2=file_id)
    file1 = await bot.get_file(file_id)
    file_path = file1.file_path
    await bot.download_file(file_path, "utils/downloads/photo2.jpg")
    summm2 = await main("utils/downloads/photo2.jpg")
    if summm1 < summm2:
        bot.send_message(chat_id=idi, text=f"–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø–æ–¥–ø–∏—Å–∞–ª–æ—Å—å {summm2 - summm1}")
    elif summm2 < summm1:
        await bot.send_message(chat_id=idi, text=f"–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ—Ç–ø–∏—Å–∞–ª–æ—Å—å {summm1 - summm2}")
    await message.answer("–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    await state.clear()


""" –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–æ–º (–£–¥–∞–ª–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞) """
@router.message(F.text == '–ë–∞–ª–∞–Ω—Åüíµ')
async def balance(message: Message, state: FSMContext):
    if message.from_user.id in admins:
        await state.set_state(Searchuser.name)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(@user)")
    else:
        pass


@router.message(Searchuser.name)
async def user_balance(message: Message, state: FSMContext):
    name_user = message.text[1:]
    await state.update_data(name=name_user)
    await message.answer("–°–µ–π—á–∞—Å –ø–æ–∏—â—É")
    data = await state.get_data()
    global data1, data2
    data1 = await get_users(data["name"])
    data2 = data["name"]
    async with ChatActionSender(bot=bot, chat_id=message.from_user.id, action="typing"):
        await asyncio.sleep(2)
        if data1 == '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ':
            await message.answer('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', reply_markup=new_user())
        else:
            await message.answer("–ù–∞—à–µ–ª\n"
                                 f"ID: {message.text}\n"
                                 f"–ë–∞–ª–∞–Ω—Å: {data1}üíµ", reply_markup=up_balance())
    await state.clear()


@router.callback_query(F.data == 'change_balance')
async def change_balance_user(callback_query: CallbackQuery):
    await callback_query.answer()
    await callback_query.message.edit_text(f"–ë–∞–ª–∞–Ω—Å: {data1}\n–ü–æ–º–µ–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å", reply_markup=change_balance(data1))


#–£–≤–µ–ª–µ—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
@router.callback_query(F.data == 'up_balance')
async def up_balance_user(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(ChangeBalanceUp.difference)
    await callback_query.answer()
    await callback_query.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –±–∞–ª–∞–Ω—Å')


@router.message(ChangeBalanceUp.difference)
async def upper_balance_user(message: Message, state: FSMContext):
    try:
        await state.update_data(difference=message.text)
        data = await state.get_data()
        summ1 = int(data['difference']) + data1
        await change_balance_bal(summ1, data2)
        await state.clear()
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    await message.answer(f"–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω: {data1}üíµ ‚û°Ô∏è {summ1}üíµ")
    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=start_kb())


#–£–º–µ–Ω—å—à–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
@router.callback_query(F.data == 'down_balance')
async def down_balance_user(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(ChangeBalanceDown.difference)
    await callback_query.answer()
    await callback_query.message.answer('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å –±–∞–ª–∞–Ω—Å')


@router.message(ChangeBalanceDown.difference)
async def downer_balance_user(message: Message, state: FSMContext):
    try:
        await state.update_data(difference=message.text)
        data = await state.get_data()
        summ = data1 - int(data['difference'])
        await change_balance_bal(summ, data2)
        await state.clear()
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    await message.answer(f"–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω: {data1}üíµ ‚û°Ô∏è {summ}üíµ")
    await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=start_kb())


#–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
@router.callback_query(F.data == 'update_balance')
async def update_balance_user1(callback_query: CallbackQuery, state: FSMContext):
    await state.set_state(Update.update_balance)
    await callback_query.answer()
    await callback_query.message.edit_text(f"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å {data2}")


@router.message(Update.update_balance)
async def update_balance_user2(message: Message, state: FSMContext):
    try:
        balance_user1 = float(message.text)
        await state.update_data(update_balance=balance_user1)
        data = await state.get_data()
        await change_balance_bal(data['update_balance'], data2)
        await state.clear()
        await message.answer(f"–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω\n{data2}\n{data['update_balance']}üíµ")
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ <b>–¶–ï–õ–û–ï</b> –∏–ª–∏ <b>–î–ï–°–Ø–¢–ò–ß–ù–û–ï</b> —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 –∏–ª–∏ 3.14)!",
                             parse_mode="HTML")


@router.callback_query(F.data == 'delete_user')
async def delete_user_user(callback_query: CallbackQuery):
    await delete_user(data2)
    await callback_query.answer()
    await callback_query.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
    await callback_query.message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=start_kb())


@router.message(F.text)
async def add_user(message: Message):
    if message.from_user.id in admins:
        if message.text == "–î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" or message.text == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞":
            await message.answer(
                "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏ –ø—É—Å—Ç—å –æ–Ω –Ω–∞–∂–º–µ—Ç –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç")
        else:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–∑–≤–µ—Å—Ç–Ω—É—é –º–Ω–µ –∫–æ–º–∞–Ω–¥—É")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–∫–∏—Ö –ø—Ä–∞–≤")
